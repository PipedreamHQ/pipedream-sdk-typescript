// This file was auto-generated by Fern from our API Definition.

import type * as Pipedream from "../../api/index.js";
import * as core from "../../core/index.js";
import type * as serializers from "../index.js";
import { DeployedComponent } from "./DeployedComponent.js";
import { HttpInterface } from "./HttpInterface.js";
import { TimerInterface } from "./TimerInterface.js";

export const Emitter: core.serialization.Schema<serializers.Emitter.Raw, Pipedream.Emitter> = core.serialization
    .union("type", {
        DeployedComponent: DeployedComponent,
        HttpInterface: HttpInterface,
        TimerInterface: TimerInterface,
    })
    .transform<Pipedream.Emitter>({
        transform: (value) => value,
        untransform: (value) => value,
    });

export declare namespace Emitter {
    export type Raw = Emitter.DeployedComponent | Emitter.HttpInterface | Emitter.TimerInterface;

    export interface DeployedComponent extends DeployedComponent.Raw {
        type: "DeployedComponent";
    }

    export interface HttpInterface extends HttpInterface.Raw {
        type: "HttpInterface";
    }

    export interface TimerInterface extends TimerInterface.Raw {
        type: "TimerInterface";
    }
}
