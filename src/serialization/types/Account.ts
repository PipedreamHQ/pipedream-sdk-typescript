// This file was auto-generated by Fern from our API Definition.

import type * as Pipedream from "../../api/index.js";
import * as core from "../../core/index.js";
import type * as serializers from "../index.js";
import { AccountId } from "./AccountId.js";
import { App } from "./App.js";

export const Account: core.serialization.ObjectSchema<serializers.Account.Raw, Pipedream.Account> =
    core.serialization.object({
        id: AccountId,
        name: core.serialization.string().optional(),
        externalId: core.serialization.property("external_id", core.serialization.string().optional()),
        healthy: core.serialization.boolean().optional(),
        dead: core.serialization.boolean().optional(),
        app: App.optional(),
        createdAt: core.serialization.property("created_at", core.serialization.date().optional()),
        updatedAt: core.serialization.property("updated_at", core.serialization.date().optional()),
        credentials: core.serialization.record(core.serialization.string(), core.serialization.unknown()).optional(),
        expiresAt: core.serialization.property("expires_at", core.serialization.date().optional()),
        error: core.serialization.string().optional(),
        lastRefreshedAt: core.serialization.property("last_refreshed_at", core.serialization.date().optional()),
        nextRefreshAt: core.serialization.property("next_refresh_at", core.serialization.date().optional()),
    });

export declare namespace Account {
    export interface Raw {
        id: AccountId.Raw;
        name?: string | null;
        external_id?: string | null;
        healthy?: boolean | null;
        dead?: boolean | null;
        app?: App.Raw | null;
        created_at?: string | null;
        updated_at?: string | null;
        credentials?: Record<string, unknown> | null;
        expires_at?: string | null;
        error?: string | null;
        last_refreshed_at?: string | null;
        next_refresh_at?: string | null;
    }
}
